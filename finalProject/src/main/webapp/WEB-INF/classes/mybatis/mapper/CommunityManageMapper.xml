<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fp.pet.admin.mapper.CommunityManageMapper">

	<select id="communityList11"
		resultType="com.fp.pet.admin.domain.CommunityManage">
		WITH Likes AS (
		SELECT
		c.communityNum,
		COUNT(cl.userId) AS
		likeCount
		FROM
		community c
		LEFT JOIN
		communityLike cl ON c.communityNum =
		cl.communityNum
		GROUP BY
		c.communityNum
		), Views AS (
		SELECT
		communityNum,
		hitCount AS viewCount
		FROM
		community
		), Replies AS (
		SELECT
		c.communityNum,
		COUNT(cr.replyNum) AS replyCount
		FROM
		community c
		LEFT
		JOIN
		communityReply cr ON c.communityNum = cr.communityNum
		GROUP BY
		c.communityNum
		), Files AS (
		SELECT
		cf.communityNum,
		cf.fileNum,
		cf.filename,
		ROW_NUMBER() OVER (PARTITION BY cf.communityNum ORDER BY
		cf.fileNum) AS fileOrder
		FROM
		communityFile cf
		)
		SELECT
		c.communityNum,
		c.subject,
		c.categoryNum,
		COALESCE(l.likeCount, 0) AS likeCount,
		COALESCE(v.viewCount, 0) AS viewCount,
		COALESCE(r.replyCount, 0) AS
		replyCount,
		COALESCE(f.filename, '3.jpg') AS fileName
		FROM
		community c
		LEFT JOIN
		Likes l ON c.communityNum = l.communityNum
		LEFT JOIN
		Views v ON
		c.communityNum = v.communityNum
		LEFT JOIN
		Replies r ON c.communityNum =
		r.communityNum
		LEFT JOIN
		Files f ON c.communityNum = f.communityNum AND
		f.fileOrder = 1
		ORDER BY
		(COALESCE(l.likeCount, 0) +
		COALESCE(v.viewCount, 0) + COALESCE(r.replyCount, 0)) DESC
		FETCH FIRST
		3 ROWS ONLY
	</select>

	<select id="communityList2"
		resultType="com.fp.pet.admin.domain.CommunityManage" parameterType="map">
		SELECT
        c.showno,
		c.communityNum,
		c.categoryNum, 
		c.subject,
		c.hitCount as viewCount,
		COUNT(cl.userId) AS likeCount,
		c.reg_date
		FROM
		community c
		LEFT JOIN
		communityLike cl ON c.communityNum = cl.communityNum
		GROUP BY
		c.communityNum, c.categoryNum, c.subject, c.hitCount, c.reg_date  ,c.showno
		ORDER BY
		c.reg_date DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size}
		ROWS ONLY
	</select>
	
	<select id="dataCount" resultType="Integer" parameterType="map">
		SELECT  NVL(COUNT(*), 0) 
		FROM
		community
	</select>

	<select id="bestChart"
		resultType="com.fp.pet.admin.domain.Chart">
		SELECT
		cc.categoryNum,
		cc.categoryName,
		COUNT(c.communityNum)
		AS postCount,
		ROUND((COUNT(c.communityNum) / SUM(COUNT(c.communityNum))
		OVER ()) * 100, 2) AS postPercentage
		FROM
		communityCategory cc
		LEFT JOIN
		community c ON cc.categoryNum = c.categoryNum
		GROUP BY
		cc.categoryNum,
		cc.categoryName, cc.showNo
		ORDER BY
		postPercentage desc
	</select>
	
	
	<update id="updateShow" parameterType="map">
		update community set showNo = #{showNo} where communityNum = #{communityNum}
	</update>

</mapper>