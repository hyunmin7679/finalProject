<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fp.pet.mapper.OrderMapper">
	<select id="findByMaxOrderNumber" resultType="String">
		select orderNum
		from productOrder
		order by orderDate DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<insert id="insertOrder" parameterType="com.fp.pet.domain.Order"> 
		insert into productOrder(orderNum, memberIdx, orderDate, totalMoney, usedSaved, deliveryCharge,
			payment, cancelAmount, orderState, ordersort) values(#{orderNum}, #{memberIdx}, sysdate,
			#{totalMoney}, #{usePoint}, #{deliveryCharge}, #{payment}, 0, 1, #{ordersort})
	</insert>
	
	<insert id="insertPayDetail" parameterType="com.fp.pet.domain.Order">
		INSERT INTO payDetail(orderNum, payMethod, cardName, authNumber, authDate) 
			VALUES (#{orderNum}, #{payMethod}, #{cardName}, #{authNumber}, TO_DATE(#{authDate}, 'YYYY-MM-DD HH24:MI:SS') )
	</insert>

	<insert id="insertOrderDetail" parameterType="com.fp.pet.domain.Order">
		INSERT INTO orderDetail(orderDetailNum, orderNum, qty, price, salePrice, couponprice,
			detailNum, detailNum2, productNum, productMoney, savedMoney, userDelete, detailState) VALUES (orderDetail_seq.NEXTVAL,
			#{orderNum}, #{qty}, #{price}, #{salePrice}, #{dismon},
			#{detailNum}, #{detailNum2}, #{productNum}, #{productMoney}, #{savedMoney}, 0, 0)
	</insert>
	
	<insert id="insertOrderDetail2" parameterType="com.fp.pet.domain.Order">
		INSERT INTO orderDetail(orderDetailNum, orderNum, qty, price, salePrice, 
			detailNum, detailNum2, productNum, productMoney, savedMoney, userDelete, detailState, couponNum) VALUES (orderDetail_seq.NEXTVAL,
			#{orderNum}, #{qty}, #{price}, #{salePrice}, 
			#{detailNum}, #{detailNum2}, #{productNum}, #{productMoney}, #{savedMoney}, 0, 0, #{couponNum})
	</insert>

	<insert id="insertOrderDelivery" parameterType="com.fp.pet.domain.Order">
		INSERT INTO orderDelivery(orderNum, recipientName, tel, zip, addr1, addr2, destMemo) 
			VALUES (#{orderNum}, #{recipientName}, #{tel}, #{zip}, #{addr1}, #{addr2}, 
					#{destMemo, jdbcType=VARCHAR})
	</insert>

	<select id="listProduct" parameterType="java.util.List" resultType="com.fp.pet.domain.Order">
		SELECT p.productNum, productName, price, savedMoney, discountRate, delivery, thumbnail,
    		po.optionNum, po.optionName, od.detailNum, od.optionValue,
    		po2.optionNum optionNum2, po2.optionName optionName2,
    		od2.detailNum detailNum2, od2.optionValue optionValue2,
    		stockNum, p.CATEGORYNUM
		FROM product p
		JOIN productOption po ON p.productNum = po.productNum
		JOIN productOption po2 ON po.optionNum = po2.parent
		JOIN optionDetail od ON po.optionNum = od.optionNum
		LEFT OUTER JOIN optionDetail od2 ON po2.optionNum = od2.optionNum
		LEFT OUTER JOIN productStock ps ON od.detailNum = ps.detailNum AND od2.detailNum = ps.detailNum2
		WHERE (od.detailNum, od2.detailNum) IN
		<foreach collection="list" item="item" index="index"
			open="(" separator="," close=")">
			(#{item.detailNum}, #{item.detailNum2})
		</foreach>
	</select>

	<select id="findById" parameterType="Long" resultType="com.fp.pet.domain.Order">
		SELECT productNum, productName, price, savedMoney, discountRate, delivery, thumbnail
		FROM product p
		WHERE p.productNum = #{productNum}
	</select>
	
	<select id="listOptionDetail" parameterType="java.util.List" resultType="com.fp.pet.domain.Order">
		SELECT detailNum, od.optionNum, optionName, optionValue
		FROM optionDetail od
		JOIN productOption po ON od.optionNum = po.optionNum
		WHERE od.detailNum IN
		<foreach collection="list" item="detailNum" index="index"
			open="(" separator="," close=")">
			#{detailNum}
		</foreach>		
	</select>
	
	<select id="findByDetailId" parameterType="Long" resultType="com.fp.pet.domain.Order">
		SELECT detailNum, od.optionNum, optionName, optionValue
		FROM optionDetail od
		JOIN productOption po ON od.optionNum = po.optionNum
		WHERE od.detailNum = #{detailNum}
	</select>
	
		
	<select id="earnPoints" parameterType="com.fp.pet.domain.Order">
		insert into point (POINTNUM, ORDERNUM, MEMBERIDX, REG_DATE, MEMO, P_QYT,P_SORT)
			values(point_seq.nextval, #{orderNum}, #{memberIdx}, sysdate, '적립' , #{totalSavedMoney},1)
	</select>
	
	<select id="usePoints" parameterType="com.fp.pet.domain.Order">
		insert into point (POINTNUM, ORDERNUM, MEMBERIDX, REG_DATE, MEMO, P_QYT,P_SORT)
			values(point_seq.nextval, #{orderNum}, #{memberIdx}, sysdate, '사용' , #{usePoint},'0')
	</select>
	
	<select id="memberPoint" parameterType="Long" resultType="com.fp.pet.domain.Order">
		select sum(p_qyt) as point from point where memberidx = #{memberIdx}
	</select>
	
	<update id="stockReduction" parameterType="com.fp.pet.domain.Order">
		update productstock set totalstock = totalstock-1
		where detailNum = #{detailNum} and detailNum2 = #{detailNum2}
	</update>
	
	<select id="findByCoupon" parameterType="com.fp.pet.domain.Order" resultType="com.fp.pet.domain.Order">
		select mp.COUPONNUM, categoryNum, couponName, coupondiscount
		from membercoupon mp
		left outer join coupon cp on mp.couponNum = cp.couponNum
		where use = 0 and couponstate = 0 and memberIdx = #{memberIdx} and categoryNum = #{categoryNum}
	</select>
	
	<update id="useCoupon" parameterType="com.fp.pet.domain.Order"> 
		update membercoupon set use = 1
		where couponNum = #{couponNum} and memberidx = #{memberIdx}
	</update>
	
	<insert id="insertPresent"  parameterType="com.fp.pet.domain.Order">
		insert into present(prenum, ordernum, to_friend, from_friend, reg_date) 
			values(pre_seq.nextval,#{orderNum},#{memberIdx}, #{memberIdx2}, sysdate)
	</insert>
	
	<select id="findByOrderNum" parameterType="String" resultType="com.fp.pet.domain.Order">
		SELECT productNum, qty, orderNum
		FROM orderdetail
		WHERE orderNum = #{orderNum}
	</select>
	
	<update id="updateOrderDetail" parameterType="com.fp.pet.domain.Order">
		update orderdetail set detailNum = #{detailNum}, detailNum2 = #{detailNum2}
		where orderNum = #{orderNum}
	</update>
	
	<update id="usePresent" parameterType="com.fp.pet.domain.Order">
		update present set usestate = 1
		where orderNum = #{orderNum}
	</update>
</mapper>