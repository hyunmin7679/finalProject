<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fp.pet.mapper.MyPageMapper">
	
	<!-- 장바구니 등록 -->
	<insert id="insertCart" parameterType="com.fp.pet.domain.Order">
		INSERT INTO cart(userId, qty, detailNum2, detailNum, productNum, reg_date) 
			VALUES (#{userId}, #{qty}, #{detailNum2}, #{detailNum}, #{productNum}, SYSDATE)
	</insert>
	
	<!-- 장바구니 수정 -->
	<update id="updateCart" parameterType="com.fp.pet.domain.Order">
		UPDATE cart SET qty = #{qty}, reg_date = SYSDATE
		WHERE detailNum2 = #{detailNum2} AND userId = #{userId}
	</update>
	
	<!-- 장바구니 단일상품 조회 -->
	<select id="findByCartId" parameterType="map" resultType="com.fp.pet.domain.Order">
		SELECT userId, detailNum2, qty, detailNum, productNum, reg_date
		FROM cart
		WHERE detailNum2 = #{detailNum2} AND userId = #{userId} 
	</select>
	
		<!-- 장바구니 리스트 -->
	<select id="listCart" resultType="com.fp.pet.domain.Order" parameterType="String">
		SELECT userId, ct.qty, 
			ct.detailNum, op.optionValue, ct.detailNum2, op2.optionValue optionValue2,
			delivery, price, discountRate,
			ct.productNum, productName, thumbnail, ct.reg_date
		FROM cart ct
		JOIN product p ON ct.productNum = p.productNum
		JOIN optionDetail op ON ct.detailNum = op.detailNum
		JOIN optionDetail op2 ON ct.detailNum2 = op2.detailNum
		WHERE userId = #{userId}
		ORDER BY reg_date DESC
	</select>
	
	<!-- 장바구니 삭제 -->
	<!-- item : 단일상품 삭제, list : 선택한 여러상품 삭제, 나머지는 전체삭제 -->
	<delete id="deleteCart" parameterType="map">
		DELETE FROM cart
		WHERE userId = #{userId} 
		<if test="gubun == 'item' ">  
			AND detailNum2 = #{detailNum2}
		</if>
		<if test="gubun == 'list' ">
			AND detailNum2 IN
			<foreach collection="list" item="detailNum2" index="index"
				open="(" separator="," close=")">
				#{detailNum2}
			</foreach>
		</if>
	</delete>
	
	<!-- 장바구니 만료상품 삭제 (15일) -->
	<delete id="deleteCartExpiration">
		DELETE FROM cart
		WHERE reg_date + 20 &lt; SYSDATE
	</delete>

 <!-- _____________________________________________________________________________________________ -->

	<!-- 주문건수 -->
	<select id="countPayment" parameterType="map" resultType="Integer"> 
		SELECT NVL(COUNT(*), 0)
		FROM productOrder po
		JOIN orderDetail od ON po.orderNum = od.orderNum
		WHERE po.memberIdx = #{memberIdx}
		AND userDelete = 0
	</select>
	
	<!-- 주문내역 리스트  -->
	<select id="listPayment" parameterType="map" resultType="com.fp.pet.domain.Payment">
		SELECT po.orderNum, po.memberIdx, to_char(orderDate,'YYYY-MM-DD') orderDate, totalMoney, od.savedMoney, 
			usedSaved, deliveryCharge, payment, qty, salePrice, 
			od.orderDetailNum, 
			op.detailNum, op.optionValue, detailNum2, op2.optionValue optionValue2,
			od.productNum, productMoney, productName, thumbnail, 
			orderState, od.detailState,
			orderStateDate, deliveryName, invoiceNumber,
			NVL(reviewWrite, 0) reviewWrite
		FROM productOrder po
		JOIN orderDetail od ON po.orderNum = od.orderNum
		JOIN product p ON od.productNum = p.productNum
		JOIN optionDetail op ON od.detailNum = op.detailNum
		JOIN optionDetail op2 ON od.detailNum2 = op2.detailNum
		LEFT OUTER JOIN (
			SELECT num, 1 reviewWrite
			FROM productReview
			WHERE memberIdx = #{memberIdx}
		) r ON od.orderDetailNum = r.num
		WHERE po.memberIdx = #{memberIdx} 
		AND userDelete = 0
		ORDER BY orderDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<!-- 주문상세 상태 등록 -->
	<insert id="insertDetailStateInfo" parameterType="map">
		INSERT INTO detailStateInfo(stateNum, orderDetailNum, memberIdx, detailState, stateMemo, detailStateDate) 
    		VALUES (detailState_seq.NEXTVAL, #{orderDetailNum}, #{memberIdx}, #{detailState}, 
                     	 #{stateMemo,jdbcType=VARCHAR}, SYSDATE)
	</insert>
	
	<!-- 주문상세 테이블의 주문상태 변경 -->
	<update id="updateOrderDetailState" parameterType="map">
		UPDATE orderDetail SET detailState = #{detailState}
		WHERE orderDetailNum = #{orderDetailNum}
	</update>
	
	<!-- 회원 탈퇴여부에 따른 수정 -->
	<update id="updateOrderHistory" parameterType="Long">
		UPDATE orderDetail SET userDelete = 1
		WHERE orderDetailNum = #{orderDetailNum}
	</update>
	
	<!-- 주문취소 리스트 -->  
	<select id="listCancel" parameterType="map" resultType="com.fp.pet.domain.Payment">
		SELECT po.orderNum, po.memberIdx, to_char(orderDate,'YYYY-MM-DD') orderDate, totalMoney, od.savedMoney, 
			usedSaved, deliveryCharge, payment, qty, salePrice, 
			od.orderDetailNum, 
			op.detailNum, op.optionValue, detailNum2, op2.optionValue optionValue2,
			od.productNum, productMoney, productName, thumbnail, 
			orderState, od.detailState,
			orderStateDate, deliveryName, invoiceNumber,
			NVL(reviewWrite, 0) reviewWrite,
			to_char(oc.reg_date,'YYYY-MM-DD') reg_date, oc.changeSort, to_char(oc.com_date,'YYYY-MM-DD') com_date , oc.changeState
		FROM productOrder po
		JOIN orderDetail od ON po.orderNum = od.orderNum
		JOIN product p ON od.productNum = p.productNum
		JOIN optionDetail op ON od.detailNum = op.detailNum
		JOIN optionDetail op2 ON od.detailNum2 = op2.detailNum
		JOIN orderChange oc ON oc.orderDetailNum = od.orderDetailNum
		LEFT OUTER JOIN (
			SELECT num, 1 reviewWrite
			FROM productReview
			WHERE memberIdx = #{memberIdx}
		) r ON od.orderDetailNum = r.num
		WHERE po.memberIdx = #{memberIdx} 
		AND userDelete = 0
		ORDER BY orderDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	 </select> 
     

</mapper>