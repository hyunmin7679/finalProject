<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fp.pet.admin.mapper.CancleMapper">
	<select id="orderCount" parameterType="map" resultType="Integer">
		SELECT COUNT(*) AS count
		FROM orderDetail od
		JOIN product p ON od.productNum = p.productNum
		JOIN optionDetail op ON od.detailNum = op.detailNum
		JOIN optionDetail op2 ON od.detailNum2 = op2.detailNum
		LEFT JOIN detailStateInfo dsi ON od.orderDetailNum = dsi.orderDetailNum
		LEFT JOIN orderChange dsi_change ON od.orderDetailNum =
		dsi_change.orderDetailNum
		LEFT JOIN payDetail pd ON od.orderNum = pd.orderNum
		LEFT JOIN productOrder po ON od.orderNum = po.orderNum
		LEFT JOIN member1 m ON po.memberIdx = m.memberIdx
		<where>
			<if test="state == 'salecancle'">
				AND od.detailState = 3
			</if>
			<if test="state == 'ordercancle'">
				AND dsi_change.changeState = 4
			</if>
			<if test="state == 'ordercanclecom'">
				AND dsi_change.changeState = 5
			</if>
		</where>

	</select>
	<select id="listOrder" parameterType="map"
		resultType="com.fp.pet.admin.domain.OrderDetailManage">
		SELECT
		usedSaved,
		od.savedMoney,
		od.orderNum,
		od.orderDetailNum,
		od.qty,
		od.price,
		od.couponPrice,
		od.couponNum,
		od.salePrice,
		od.productMoney,
		od.savedMoney,
		op.detailNum,
		op.optionValue,
		od.detailNum2,
		op2.optionValue AS
		optionValue2,
		od.productNum,
		p.productName,
		od.detailState,

		<if test="state == 'salecancle'">
			dsi.stateMemo,
			dsi.detailStateDate,
		</if>
		<if test="state == 'ordercancle'">
			dsi.changeSort,dsi.changeState,dsi.reg_date,dsi.com_date,adminMemo,cancelCost,dsi.changeNum,
		</if>
		<if test="state == 'ordercanclecom'">
			dsi.changeSort,dsi.changeState,dsi.reg_date,dsi.com_date,adminMemo,cancelCost,dsi.changeNum,
		</if>
		pd.payMethod,
		po.memberIdx,
		m.userName,productCancelM
		FROM
		orderDetail od
		JOIN
		product p ON od.productNum = p.productNum
		JOIN
		optionDetail op ON
		od.detailNum = op.detailNum
		JOIN
		optionDetail op2 ON od.detailNum2 =
		op2.detailNum
		LEFT JOIN
		<if test="state == 'salecancle'">
			detailStateInfo dsi ON od.orderDetailNum =
			dsi.orderDetailNum
		</if>
		<if test="state == 'ordercancle'">
			orderChange dsi ON od.orderDetailNum = dsi.orderDetailNum
		</if>
		<if test="state == 'ordercanclecom'">
			orderChange dsi ON od.orderDetailNum = dsi.orderDetailNum
		</if>
		LEFT JOIN
		payDetail pd ON od.orderNum = pd.orderNum
		LEFT JOIN
		productOrder po ON od.orderNum = po.orderNum
		LEFT JOIN
		member1 m ON
		po.memberIdx = m.memberIdx

		<where>
			<if test="state == 'salecancle'">
				od.detailState = 3
			</if>
			<if test="state == 'ordercancle'">
				dsi.changeState = 4
			</if>
			<if test="state == 'ordercanclecom'">
				dsi.changeState = 5
			</if>
		</where>
		ORDER BY od.orderNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size}
		ROWS ONLY
	</select>

	<update id="updateChange" parameterType="map">
		UPDATE
		orderChange SET
		changeState = 5, com_date = sysdate, adminMemo = #{adminMemo}
		WHERE
		changeNum = #{changeNum}
	</update>

	<update id="updateOrderDetailState" parameterType="map">
		UPDATE
		orderDetail SET detailState = 5, productCancelM = #{cancelCost}
		WHERE
		orderDetailNum =
		#{orderDetailNum}
	</update>

	<update id="updateOrder" parameterType="map">
		UPDATE
		productOrder SET
		cancelAmount = #{cancelCost}
		WHERE orderNum =
		#{orderNum}
	</update>

	<!-- 주문에 대한 상세 주문의 주문 취소 이외의 개수 -->
	<select id="totalOrderCount" parameterType="String"
		resultType="Integer">
		SELECT NVL(COUNT(*), 0) orderCount
		FROM orderDetail
		WHERE
		orderNum = #{orderNum} AND (detailState != 3 AND detailState != 5 AND
		detailState != 12)
	</select>

	<update id="updateOrderState" parameterType="map">
		UPDATE
		productOrder
		SET orderState = 6, orderStateDate = SYSDATE
		WHERE orderNum =
		#{orderNum}
	</update>

	<select id="findByMoney" parameterType="String"
		resultType="Integer">
		select cancelAmount from productOrder where orderNum =
		#{orderNum}
	</select>

	<insert id="updatePoint" parameterType="map">
		insert into
		point(pointNum,orderNum,memberIdx,reg_date,memo,p_qyt,p_sort)
		values(point_seq.NEXTVAL,#{orderNum},#{memberIdx},sysdate,'주문
		취소로 인한
		포인트 회수',#{savedMoney},NULL)
	</insert>

	<insert id="updateUsedSaved" parameterType="map">
		insert into
		point(pointNum, orderNum ,memberIdx,reg_date,memo,p_qyt,p_sort)
		values(point_seq.NEXTVAL,#{orderNum},#{memberIdx},sysdate,'주문
		취소로 인한
		포인트 복구',#{usedSaved},NULL)
	</insert>

	<select id="findByStock" parameterType="map" resultType="map">
		select
		stockNum,totalStock from productStock
		where productNum = #{productNum}
		and detailNum = #{detailNum} and detailNum2 = #{detailNum2}
	</select>

	<update id="updateStock" parameterType="map">
		update productStock set
		totalStock = #{totalStock} where stockNum = #{stockNum}
	</update>
	<update id="updateCoupon" parameterType="map">
		update memberCoupon set
		use = 0 where couponNum = #{couponNum}
	</update>

</mapper>